import logging
import asyncio
from discord.ext import commands
from discord import Intents
from config import load_config
from logging_setup import setup_logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
setup_logging()

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
DISCORD_TOKEN, GUILD_ID, CHANNEL_ID, WEBHOOK_URL, GIF_URL, IMAGE_URL, AVATAR_URL = load_config()
if not DISCORD_TOKEN:
    raise ValueError("‚ùå Discord —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.")

# –ò–Ω—Ç–µ–Ω—Ç—ã
intents = Intents.default()
intents.members = True
intents.message_content = True

# –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = commands.Bot(command_prefix='/', intents=intents)

# –ó–∞–≥—Ä—É–∑–∫–∞ cogs
async def load_cogs():
    cogs = [
        "cogs.events",
        "cogs.commands",
        "cogs.duel",
        "cogs.clan_info",
    ]
    for cog in cogs:
        try:
            await bot.load_extension(cog)
            logging.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω cog: {cog}")
        except Exception as e:
            logging.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ cog {cog}: {e}")

@bot.event
async def on_ready():
    logging.info(f"‚úÖ –ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω (ID: {bot.user.id})")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    logging.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    async with bot:
        await load_cogs()
        await bot.start(DISCORD_TOKEN)
    logging.info("üõë –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logging.info("‚ùå –ó–∞–ø—É—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
    except Exception as e:
        logging.critical(f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
