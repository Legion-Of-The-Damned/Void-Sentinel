import os
import discord
from discord import app_commands
from discord.ext import commands
from datetime import datetime
from github import Github

# –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
QUESTIONS = [
    "–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –∏–≥—Ä—ã —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω—Ä–∞–≤–∏—Ç—Å—è (–∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π, —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ç. –¥.)?",
    "–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –æ–ø—ã—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏ –∫–∞–∫ —Ç—ã —Ä–µ—à–∞–µ—à—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ –∫–æ–º–∞–Ω–¥–µ?",
    "–ö–∞–∫ —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞–Ω–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è—Ö –∏ –Ω–æ–≤–æ—Å—Ç—è—Ö?",
    "–ö–∞–∫ —á–∞—Å—Ç–æ —Ç—ã –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º –≤ –∫–ª–∞–Ω–µ?",
    "–ö–∞–∫ —Ç—ã –æ–±—ã—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è —Å –∞–≥—Ä–µ—Å—Å–∏–µ–π –∏–ª–∏ –Ω–µ—É–¥–∞—á–∞–º–∏ –≤ –∏–≥—Ä–µ?",
    "–¢—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –∏–≥—Ä–∞—Ç—å –≤ –æ–¥–∏–Ω–æ—á–∫—É –∏–ª–∏ –≤ –∫–æ–º–∞–Ω–¥–µ? –ü–æ—á–µ–º—É?",
    "–ö–∞–∫ —Ç—ã –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ –∫—Ä–∏—Ç–∏–∫–µ –∏ –∫–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º —Ç—ã –æ–±—ã—á–Ω–æ –µ—ë –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—à—å?",
    "–ö–∞–∫–∏–µ —É —Ç–µ–±—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç –æ–±—â–µ–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ —á–ª–µ–Ω–∞–º–∏ –∫–ª–∞–Ω–∞?",
    "–í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —Ç–µ–±–µ —É–¥–æ–±–Ω–æ –∏–≥—Ä–∞—Ç—å?",
    "–ë–æ–∏—Ç–µ—Å—å –ª–∏ –≤—ã –Ω–µ–∑–Ω–∞–∫–æ–º—ã—Ö –ª—é–¥–µ–π –∏ —Ç—Ä–µ–≤–æ–∂–∏—Ç—å –∏—Ö?",
    "–í–∞—à–∞ —Ü–µ–ª—å –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∫–ª–∞–Ω?",
    "–ö–∞–∫–∞—è –≤–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –∏ –∫–∞–∫–æ–π —É –≤–∞—Å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å?"
]

def push_to_github(user_name, answers):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞—è–≤–∫—É –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π GitHub –≤ –ø–∞–ø–∫—É applications/"""
    token = os.getenv("MY_GITHUB_TOKEN")
    repo_name = os.getenv("REPO_NAME", "Legion-Of-The-Damned/-VS-Data-Base")
    
    if not token:
        print("GitHub token –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    g = Github(token)
    repo = g.get_repo(repo_name)
    
    folder_path = "applications"  # —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    content = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}\n–î–∞—Ç–∞: {datetime.utcnow()}\n\n"
    for i, answer in enumerate(answers, start=1):
        content += f"–í–æ–ø—Ä–æ—Å {i}: {answer}\n"
    
    # –ò–º—è —Ñ–∞–π–ª–∞: user_–º–µ—Ç–∫–∞_–≤—Ä–µ–º–µ–Ω–∏.txt
    file_name = f"{folder_path}/{user_name}_{datetime.utcnow().strftime('%Y%m%d%H%M%S')}.txt"
    
    try:
        repo.create_file(file_name, f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {user_name}", content)
        print(f"–ó–∞—è–≤–∫–∞ {user_name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –Ω–∞ GitHub –≤ {file_name}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ GitHub: {e}")

class Applications(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.APPLICATIONS_CHANNEL_ID = 1362357361863295199
        self.MEMBER_ROLE_NAME = "üíÄ–õ–µ–≥–∏–æ–Ω –ü—Ä–æ–∫–ª—è—Ç—ã—Öüî•"
        self.OLD_ROLE_NAME = "ü§ù–î—Ä—É–≥ –∫–ª–∞–Ω–∞üö©"

    async def is_staff(self, interaction: discord.Interaction):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º"""
        if interaction.user.guild_permissions.administrator:
            return True
        
        staff_role = discord.utils.get(interaction.guild.roles, name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
        if staff_role and staff_role in interaction.user.roles:
            return True
            
        raise app_commands.MissingPermissions(["administrator"])

    @app_commands.command(name="–∑–∞—è–≤–∫–∞", description="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ")
    async def application(self, interaction: discord.Interaction):
        """–ü–æ—à–∞–≥–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ —á–µ—Ä–µ–∑ –õ–° –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä"""
        try:
            answers = []

            if isinstance(interaction.channel, discord.DMChannel) or interaction.guild is None:
                channel = interaction.user
            else:
                try:
                    channel = await interaction.user.create_dm()
                except:
                    return await interaction.response.send_message(
                        "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–°. –†–∞–∑—Ä–µ—à–∏—Ç–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞.",
                        ephemeral=True
                    )

            await interaction.response.send_message(
                "üì© –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–±–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –∑–∞—è–≤–∫–∏!", ephemeral=True
            )

            for question in QUESTIONS:
                await channel.send(f"{question}")

                def check(m):
                    return m.author == interaction.user and isinstance(m.channel, discord.DMChannel)

                try:
                    msg = await self.bot.wait_for('message', check=check, timeout=300)
                    answers.append(msg.content)
                except:
                    await channel.send("‚è∞ –í—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –∫–æ–º–∞–Ω–¥–æ–π /–∑–∞—è–≤–∫–∞.")
                    return

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª Discord
            application_channel = self.bot.get_channel(self.APPLICATIONS_CHANNEL_ID)
            if not isinstance(application_channel, discord.TextChannel):
                return await channel.send("‚ùå –û—à–∏–±–∫–∞: –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")

            embed = discord.Embed(
                title="üìÑ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {interaction.user.mention}",
                color=discord.Color.blue()
            )

            for i, answer in enumerate(answers):
                embed.add_field(name=f"–í–æ–ø—Ä–æ—Å {i+1}", value=answer, inline=False)

            embed.set_footer(text=f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {interaction.user.id}")

            msg = await application_channel.send(embed=embed)
            await msg.add_reaction('‚úÖ')
            await msg.add_reaction('‚ùå')

            await channel.send("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!")

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ GitHub
            push_to_github(str(interaction.user), answers)
        
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ –∑–∞—è–≤–∫–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏.", ephemeral=True
            )

    @commands.Cog.listener()
    async def on_raw_reaction_add(self, payload: discord.RawReactionActionEvent):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ –∑–∞—è–≤–∫–∏"""
        try:
            if payload.channel_id != self.APPLICATIONS_CHANNEL_ID:
                return
            
            guild = self.bot.get_guild(payload.guild_id)
            if not guild:
                return
            
            member = guild.get_member(payload.user_id)
            if not member or member.bot:
                return
            
            channel = self.bot.get_channel(payload.channel_id)
            if not channel:
                return
            
            message = await channel.fetch_message(payload.message_id)
            if not message.embeds:
                return
            
            if not (member.guild_permissions.administrator or 
                   any(role.name == "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä" for role in member.roles)):
                return
            
            embed = message.embeds[0]
            if not embed.footer or not embed.footer.text:
                return
                
            footer_parts = embed.footer.text.split("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
            if len(footer_parts) < 2:
                return
                
            try:
                user_id = int(footer_parts[1])
            except ValueError:
                return
                
            target_member = guild.get_member(user_id)
            if not target_member:
                return

            old_role = discord.utils.get(guild.roles, name=self.OLD_ROLE_NAME)
            new_role = discord.utils.get(guild.roles, name=self.MEMBER_ROLE_NAME)
            
            if str(payload.emoji) == '‚úÖ':
                if old_role in target_member.roles:
                    await target_member.remove_roles(old_role)
                if new_role:
                    await target_member.add_roles(new_role)

                await message.delete()
                try:
                    await target_member.send('üéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–ª–∞–Ω!')
                except:
                    pass
            
            elif str(payload.emoji) == '‚ùå':
                try:
                    await target_member.send('üòï –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º.')
                except:
                    pass
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∞–∫—Ü–∏–π: {e}")

async def setup(bot):
    await bot.add_cog(Applications(bot))
