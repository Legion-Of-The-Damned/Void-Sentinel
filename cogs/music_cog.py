import discord
from discord.ext import commands
from discord import app_commands
import asyncio
import wavelink

class ControlView(discord.ui.View):
    def __init__(self, music_cog, interaction):
        super().__init__(timeout=None)
        self.music_cog = music_cog
        self.interaction = interaction

    @discord.ui.button(emoji="‚è∏Ô∏è", style=discord.ButtonStyle.gray)
    async def pause_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        player: wavelink.Player = interaction.guild.voice_client
        if player.is_playing():
            await player.pause()
            await interaction.response.send_message("‚è∏Ô∏è –ü–∞—É–∑–∞.", ephemeral=True)
        elif player.is_paused():
            await player.resume()
            await interaction.response.send_message("‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ.", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùó –ú—É–∑—ã–∫–∞ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.", ephemeral=True)

    @discord.ui.button(emoji="‚è≠Ô∏è", style=discord.ButtonStyle.gray)
    async def skip_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.music_cog.skip_song(interaction)

    @discord.ui.button(emoji="‚èπÔ∏è", style=discord.ButtonStyle.gray)
    async def stop_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        await self.music_cog.stop_song(interaction)

    @discord.ui.button(emoji="üîÅ", style=discord.ButtonStyle.gray)
    async def repeat_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        self.music_cog.repeat = not self.music_cog.repeat
        status = "–≤–∫–ª—é—á–µ–Ω" if self.music_cog.repeat else "–≤—ã–∫–ª—é—á–µ–Ω"
        await interaction.response.send_message(f"üîÅ –ü–æ–≤—Ç–æ—Ä {status}.", ephemeral=True)


class Music(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.queue = asyncio.Queue()
        self.current = None
        self.play_next_song = asyncio.Event()
        self.repeat = False
        self.node = None
        asyncio.create_task(self.player_loop())
        asyncio.create_task(self.connect_node())

    async def connect_node(self):
        # —Å–æ–∑–¥–∞—ë–º Node –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ bot
        self.node = wavelink.Node(
            host='127.0.0.1',
            port=2333,
            password='youshallnotpass'
        )
        await self.node.wait_until_ready()

    async def ensure_voice(self, interaction: discord.Interaction):
        vc: wavelink.Player = interaction.guild.voice_client
        if vc is None:
            if interaction.user.voice:
                vc = await interaction.user.voice.channel.connect(cls=wavelink.Player)
                vc.node = self.node  # –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º Node
            else:
                await interaction.response.send_message(
                    "‚ùó –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True
                )
                return None
        return vc

    async def player_loop(self):
        await self.bot.wait_until_ready()
        while True:
            self.play_next_song.clear()
            self.current = await self.queue.get()
            player: wavelink.Player = self.current['player']
            track: wavelink.Track = self.current['track']

            await player.play(track)
            await self.current["interaction"].followup.send(
                embed=discord.Embed(
                    title=f"üé∂ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {track.title}",
                    url=track.uri,
                    color=discord.Color.blue()
                ),
                view=ControlView(self, self.current["interaction"])
            )

            await self.play_next_song.wait()
            if self.repeat:
                await self.queue.put(self.current)

    @app_commands.command(name="–∏–≥—Ä–∞—Ç—å", description="–ò–≥—Ä–∞–µ—Ç –ø–µ—Å–Ω—é –ø–æ —Å—Å—ã–ª–∫–µ –∏–ª–∏ –ø–æ–∏—Å–∫—É")
    @app_commands.describe(–∑–∞–ø—Ä–æ—Å="–°—Å—ã–ª–∫–∞ –∏–ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–µ—Å–Ω–∏")
    async def play(self, interaction: discord.Interaction, –∑–∞–ø—Ä–æ—Å: str):
        player = await self.ensure_voice(interaction)
        if player is None:
            return

        await interaction.response.defer()

        if –∑–∞–ø—Ä–æ—Å.startswith("http"):
            track = await wavelink.YouTubeTrack.from_url(–∑–∞–ø—Ä–æ—Å)
        else:
            track = await wavelink.YouTubeTrack.search(–∑–∞–ø—Ä–æ—Å, return_first=True)

        if track is None:
            await interaction.followup.send("‚ùå –¢—Ä–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
            return

        await self.queue.put({"track": track, "player": player, "interaction": interaction})
        if not player.is_playing():
            self.play_next_song.set()
            await interaction.followup.send(f"‚ñ∂Ô∏è –ù–∞—á–∏–Ω–∞—é –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: **{track.title}**", ephemeral=True)
        else:
            await interaction.followup.send(f"‚úÖ –¢—Ä–µ–∫ **{track.title}** –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å.", ephemeral=True)

    async def skip_song(self, interaction: discord.Interaction):
        player: wavelink.Player = interaction.guild.voice_client
        if player and player.is_playing():
            await player.stop()
            await interaction.response.send_message("‚è≠Ô∏è –¢–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω.", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùó –ú—É–∑—ã–∫–∞ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.", ephemeral=True)

    async def stop_song(self, interaction: discord.Interaction):
        player: wavelink.Player = interaction.guild.voice_client
        if player:
            while not self.queue.empty():
                try:
                    self.queue.get_nowait()
                    self.queue.task_done()
                except asyncio.QueueEmpty:
                    break
            await player.stop()
            await player.disconnect()
            await interaction.response.send_message("‚èπÔ∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –æ—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞.", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùó –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á—ë–Ω.", ephemeral=True)


async def setup(bot: commands.Bot):
    await bot.add_cog(Music(bot))
