import os
import discord
from discord import app_commands
from discord.ext import commands
from datetime import datetime
from github import Github
import logging

# –õ–æ–≥–≥–µ—Ä –¥–ª—è Applications
logger = logging.getLogger("Applications")

# –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
QUESTIONS = [
    "–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –∏–≥—Ä—ã —Ç–µ–±–µ –±–ª–∏–∂–µ: –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π, —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏–ª–∏ —á—Ç–æ-—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ?",
    "–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –æ–ø—ã—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã? –ö–∞–∫ –æ–±—ã—á–Ω–æ —Ä–µ—à–∞–µ—à—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ –∫–æ–º–∞–Ω–¥–µ?",
    "–ö–∞–∫ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞–Ω–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è—Ö –∏ –Ω–æ–≤–æ—Å—Ç—è—Ö?",
    "–°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é —Ç—ã –≥–æ—Ç–æ–≤ –ø–æ—Å–≤—è—â–∞—Ç—å –∫–ª–∞–Ω—É?",
    "–ö–∞–∫ –æ–±—ã—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è —Å –ø–æ—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã–º–∏ —Å–∏—Ç—É–∞—Ü–∏—è–º–∏ –≤ –∏–≥—Ä–µ?",
    "–¢—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ–¥–∏–Ω–æ—á–∫—É –∏–ª–∏ –≤ –∫–æ–º–∞–Ω–¥–µ? –ü–æ—á–µ–º—É?",
    "–ö–∞–∫ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—à—å –∫—Ä–∏—Ç–∏–∫—É –∏ —É–º–µ–µ—à—å –ª–∏ –∏–∑–≤–ª–µ–∫–∞—Ç—å –∏–∑ –Ω–µ—ë –ø–æ–ª—å–∑—É?",
    "–ö–∞–∫–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —É —Ç–µ–±—è –æ—Ç –æ–±—â–µ–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ —á–ª–µ–Ω–∞–º–∏ –∫–ª–∞–Ω–∞?",
    "–í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ —Ç–µ–±–µ —É–¥–æ–±–Ω–µ–µ –≤—Å–µ–≥–æ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–ª–∞–Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö?",
    "–ß—Ç–æ –¥–ª—è —Ç–µ–±—è —Å—Ç—Ä–∞—à–Ω–µ–µ: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∏ –∏–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è?",
    "–ö–∞–∫–∞—è —Ç–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å –ø—Ä–∏ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤ –∫–ª–∞–Ω?",
    "–í –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ –∏ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è?",
    "–ï—Å–ª–∏ –±—ã Legion Of The Damned –±—ã–ª–∞ –≤–∏–¥–µ–æ–∏–≥—Ä–æ–π, –∫–µ–º –±—ã —Ç—ã —Ö–æ—Ç–µ–ª –±—ã—Ç—å –≤ –µ—ë –∏—Å—Ç–æ—Ä–∏–∏?",
    "–ü—Ä–∏–¥—É–º–∞–π —Å–≤–æ–π –ø–æ–∑—ã–≤–Ω–æ–π, –∫–æ—Ç–æ—Ä—ã–º —Ç–µ–±—è –±—É–¥—É—Ç –Ω–∞–∑—ã–≤–∞—Ç—å –≤ –∫–ª–∞–Ω–µ.",
    "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–∞–º–æ–π —ç–ø–∏—á–Ω–æ–π –ø–æ–±–µ–¥–µ –≤ —Å–≤–æ–µ–π –∏–≥—Ä–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏."
]

def push_to_github(user_name, answers):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞—è–≤–∫—É –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π GitHub –≤ –ø–∞–ø–∫—É applications/"""
    token = os.getenv("MY_GITHUB_TOKEN")
    repo_name = os.getenv("REPO_NAME", "Legion-Of-The-Damned/-VS-Data-Base")
    
    if not token:
        logger.error("GitHub token –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    try:
        g = Github(token)
        repo = g.get_repo(repo_name)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GitHub: {e}")
        return
    
    folder_path = "applications"
    content = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name}\n–î–∞—Ç–∞: {datetime.utcnow()}\n\n"
    # üîπ –í–æ–ø—Ä–æ—Å + –æ—Ç–≤–µ—Ç
    for question, answer in zip(QUESTIONS, answers):
        content += f"{question}\n–û—Ç–≤–µ—Ç: {answer}\n\n"
    
    file_name = f"{folder_path}/{user_name}_{datetime.utcnow().strftime('%Y%m%d%H%M%S')}.txt"
    
    try:
        repo.create_file(file_name, f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {user_name}", content)
        logger.success(f"–ó–∞—è–≤–∫–∞ {user_name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –Ω–∞ GitHub –≤ {file_name}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ GitHub: {e}")


class Applications(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.APPLICATIONS_CHANNEL_ID = 1362357361863295199
        self.MEMBER_ROLE_NAME = "üíÄ–õ–µ–≥–∏–æ–Ω –ü—Ä–æ–∫–ª—è—Ç—ã—Öüî•"
        self.OLD_ROLE_NAME = "ü§ù–î—Ä—É–≥ –∫–ª–∞–Ω–∞üö©"
        self.active_applications = set()  # üîπ –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏

    async def is_staff(self, interaction: discord.Interaction):
        if interaction.user.guild_permissions.administrator:
            return True
        staff_role = discord.utils.get(interaction.guild.roles, name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä")
        if staff_role and staff_role in interaction.user.roles:
            return True
        raise app_commands.MissingPermissions(["administrator"])

    @app_commands.command(name="–∑–∞—è–≤–∫–∞", description="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ")
    async def application(self, interaction: discord.Interaction):
        user_id = interaction.user.id
        if user_id in self.active_applications:
            return await interaction.response.send_message(
                "‚è≥ –£ –≤–∞—Å —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞—è–≤–∫–∞. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ—ë –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –Ω–æ–≤–æ–π.",
                ephemeral=True
            )
        self.active_applications.add(user_id)

        try:
            answers = []
            if isinstance(interaction.channel, discord.DMChannel) or interaction.guild is None:
                channel = interaction.channel
                await interaction.response.send_message(
                    "üì© –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–±–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –∑–∞—è–≤–∫–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–µ!", ephemeral=True
                )
            else:
                try:
                    channel = await interaction.user.create_dm()
                except:
                    self.active_applications.remove(user_id)
                    return await interaction.response.send_message(
                        "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–°. –†–∞–∑—Ä–µ—à–∏—Ç–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞.",
                        ephemeral=True
                    )
                await interaction.response.send_message(
                    "üì© –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–±–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –∑–∞—è–≤–∫–∏!", ephemeral=True
                )
                await channel.send("–ü—Ä–∏–≤–µ—Ç! –ù–∞—á–Ω—ë–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏. –ù–∏–∂–µ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ–±—è.")

            # –ó–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã
            for question in QUESTIONS:
                await channel.send(f"{question}")

                def check(m):
                    return m.author == interaction.user and isinstance(m.channel, discord.DMChannel)

                try:
                    msg = await self.bot.wait_for('message', check=check, timeout=300)
                    answers.append(msg.content)
                except:
                    await channel.send("‚è∞ –í—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –∫–æ–º–∞–Ω–¥–æ–π /–∑–∞—è–≤–∫–∞.")
                    return

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª Discord
            application_channel = self.bot.get_channel(self.APPLICATIONS_CHANNEL_ID)
            if not isinstance(application_channel, discord.TextChannel):
                return await channel.send("‚ùå –û—à–∏–±–∫–∞: –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")

            embed = discord.Embed(
                title="üìÑ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {interaction.user.mention}",
                color=discord.Color.blue()
            )
            # üîπ –í–æ–ø—Ä–æ—Å + –æ—Ç–≤–µ—Ç –≤ embed
            for question, answer in zip(QUESTIONS, answers):
                embed.add_field(name=question, value=answer, inline=False)
            embed.set_footer(text=f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {interaction.user.id}")

            msg = await application_channel.send(embed=embed)
            await msg.add_reaction('‚úÖ')
            await msg.add_reaction('‚ùå')

            await channel.send("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!")

            # üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –ø—Ä–∞–≤–∞–º–∏
            guild = interaction.guild
            if guild:
                try:
                    async for member in guild.fetch_members(limit=None):
                        if member.bot:
                            continue
                        perms = member.guild_permissions
                        if perms.administrator or perms.manage_guild or perms.manage_roles:
                            try:
                                dm_channel = member.dm_channel or await member.create_dm()
                                await dm_channel.send(
                                    f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {interaction.user.mention} –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é: {msg.jump_url}"
                                )
                                logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {member} —Å –ø—Ä–∞–≤–∞–º–∏ {perms}")
                            except discord.Forbidden:
                                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° {member}: –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
                            except Exception as e:
                                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –õ–° {member}: {e}")
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞: {e}")

            push_to_github(str(interaction.user), answers)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ –∑–∞—è–≤–∫–∞: {e}")
            await interaction.response.send_message(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏.", ephemeral=True
            )

        finally:
            self.active_applications.discard(user_id)

    @commands.Cog.listener()
    async def on_raw_reaction_add(self, payload: discord.RawReactionActionEvent):
        try:
            if payload.channel_id != self.APPLICATIONS_CHANNEL_ID:
                return
            guild = self.bot.get_guild(payload.guild_id)
            if not guild:
                return
            member = guild.get_member(payload.user_id)
            if not member or member.bot:
                return
            channel = self.bot.get_channel(payload.channel_id)
            if not channel:
                return
            message = await channel.fetch_message(payload.message_id)
            if not message.embeds:
                return
            if not (member.guild_permissions.administrator or 
                   any(role.name == "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä" for role in member.roles)):
                return
            embed = message.embeds[0]
            if not embed.footer or not embed.footer.text:
                return
            footer_parts = embed.footer.text.split("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
            if len(footer_parts) < 2:
                return
            try:
                user_id = int(footer_parts[1])
            except ValueError:
                return
            target_member = guild.get_member(user_id)
            if not target_member:
                return
            old_role = discord.utils.get(guild.roles, name=self.OLD_ROLE_NAME)
            new_role = discord.utils.get(guild.roles, name=self.MEMBER_ROLE_NAME)
            if str(payload.emoji) == '‚úÖ':
                if old_role in target_member.roles:
                    await target_member.remove_roles(old_role)
                if new_role:
                    await target_member.add_roles(new_role)
                await message.delete()
                try:
                    await target_member.send('üéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–ª–∞–Ω!')
                except:
                    pass
            elif str(payload.emoji) == '‚ùå':
                try:
                    await target_member.send('üòï –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º.')
                except:
                    pass
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∞–∫—Ü–∏–π: {e}")


async def setup(bot):
    await bot.add_cog(Applications(bot))
