import discord
from discord.ext import commands
from discord import app_commands
import logging
import data

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞ ---
logger = logging.getLogger("ClanGeneralCog")


class ClanGeneral(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    # --- /—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ---
    @commands.hybrid_command(name="—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    async def stats_command(self, ctx: commands.Context, user: discord.Member):
        try:
            stats_data = await data.get_stats()
            user_stats = stats_data.get(str(user.id), {"wins": 0, "losses": 0})

            await ctx.send(
                f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {user.mention}:\n"
                f"–ü–æ–±–µ–¥—ã: {user_stats['wins']}\n"
                f"–ü–æ—Ä–∞–∂–µ–Ω–∏—è: {user_stats['losses']}"
            )
            logger.success(f"{ctx.author} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è {user}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è {user}: {e}")
            await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

    # --- /–æ–±—â–∞—è_—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ---
    @app_commands.command(name="–æ–±—â–∞—è_—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º")
    async def all_stats(self, interaction: discord.Interaction):
        try:
            stats_data = await data.get_stats()

            if not stats_data:
                await interaction.response.send_message("üìâ –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –±–æ—è—Ö.")
                logger.info(f"{interaction.user} –≤—ã–∑–≤–∞–ª –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –Ω–æ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç")
                return

            guild = interaction.guild
            stats_list = []
            for user_id_str, user_data in stats_data.items():
                user_id = int(user_id_str)
                member = guild.get_member(user_id)
                name = member.display_name if member else f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}"
                wins = user_data.get("wins", 0)
                losses = user_data.get("losses", 0)
                total = wins + losses
                stats_list.append((name, wins, losses, total))

            stats_list.sort(key=lambda x: x[1], reverse=True)

            lines = ["**üèÜ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥—É—ç–ª–µ–π:**\n"]
            for i, (name, wins, losses, total) in enumerate(stats_list, 1):
                lines.append(f"{i}. **{name}** ‚Äî üü¢ –ü–æ–±–µ–¥: {wins}, üî¥ –ü–æ—Ä–∞–∂–µ–Ω–∏–π: {losses}, ‚öî –í—Å–µ–≥–æ: {total}")

            embed = discord.Embed(
                title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥—É—ç–ª–µ–π",
                description="\n".join(lines),
                color=discord.Color.gold()
            )
            embed.set_footer(
                text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ: {interaction.user.display_name}",
                icon_url=interaction.user.display_avatar.url
            )
            embed.timestamp = discord.utils.utcnow()

            await interaction.response.send_message(embed=embed)
            logger.success(f"{interaction.user} —É—Å–ø–µ—à–Ω–æ –≤—ã–∑–≤–∞–ª –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            await interaction.response.send_message("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.", ephemeral=True)


# --- Setup ---
async def setup(bot: commands.Bot):
    await bot.add_cog(ClanGeneral(bot))
