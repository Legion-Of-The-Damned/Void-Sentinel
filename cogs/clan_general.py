import discord
from discord.ext import commands
from discord import app_commands
import logging
import data

logger = logging.getLogger("ClanGeneral")


class ClanGeneral(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    # --- /—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ---
    @commands.hybrid_command(name="—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    async def stats_command(self, ctx: commands.Context, user: discord.Member):
        try:
            stats_data = await data.get_stats()
            user_key = data.key_from_name(user.display_name)
            user_stats = stats_data.get(user_key, {"wins": 0, "losses": 0, "display_name": user.display_name})

            display_name = user_stats.get("display_name", user.display_name)

            await ctx.send(
                f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {display_name}:\n"
                f"–ü–æ–±–µ–¥—ã: {user_stats.get('wins', 0)}\n"
                f"–ü–æ—Ä–∞–∂–µ–Ω–∏—è: {user_stats.get('losses', 0)}"
            )
            logger.info(f"{ctx.author} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è {user}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è {user}: {e}")
            await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

    # --- /–æ–±—â–∞—è_—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ---
    @app_commands.command(name="–æ–±—â–∞—è_—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º")
    async def all_stats(self, interaction: discord.Interaction):
        try:
            # –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç, —á—Ç–æ–±—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å followup
            await interaction.response.defer(thinking=True)
            
            stats_data = await data.get_stats()
            if not stats_data:
                await interaction.followup.send("üìâ –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –±–æ—è—Ö.")
                logger.info(f"{interaction.user} –≤—ã–∑–≤–∞–ª –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –Ω–æ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç")
                return

            stats_list = []
            for user_key, user_data in stats_data.items():
                display_name = user_data.get("display_name", user_key)
                wins = user_data.get("wins", 0)
                losses = user_data.get("losses", 0)
                total = wins + losses
                stats_list.append((display_name, wins, losses, total))

            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–æ–±–µ–¥–∞–º
            stats_list.sort(key=lambda x: x[1], reverse=True)

            lines = ["**üèÜ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥—É—ç–ª–µ–π:**\n"]
            for i, (name, wins, losses, total) in enumerate(stats_list, 1):
                lines.append(f"{i}. **{name}** ‚Äî üü¢ –ü–æ–±–µ–¥: {wins}, üî¥ –ü–æ—Ä–∞–∂–µ–Ω–∏–π: {losses}, ‚öî –í—Å–µ–≥–æ: {total}")

            embed = discord.Embed(
                title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥—É—ç–ª–µ–π",
                description="\n".join(lines),
                color=discord.Color.gold()
            )
            embed.set_footer(
                text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ: {interaction.user.display_name}",
                icon_url=interaction.user.display_avatar.url
            )
            embed.timestamp = discord.utils.utcnow()

            await interaction.followup.send(embed=embed)
            logger.info(f"{interaction.user} —É—Å–ø–µ—à–Ω–æ –≤—ã–∑–≤–∞–ª –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            try:
                await interaction.followup.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.", ephemeral=True)
            except Exception:
                pass


# --- Setup ---
async def setup(bot: commands.Bot):
    await bot.add_cog(ClanGeneral(bot))
