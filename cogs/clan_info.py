import discord
import logging
from discord.ext import commands

class ClanInfo(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        logging.info("‚úÖ Cog ClanInfo –∑–∞–≥—Ä—É–∂–µ–Ω.")

    @discord.app_commands.command(name="–∫–ª–∞–Ω", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–ª–µ–Ω–∞—Ö –∫–ª–∞–Ω–∞.")
    async def clan_info(self, interaction: discord.Interaction):
        await send_clan_member_info(self.bot, interaction)

async def send_clan_member_info(bot: commands.Bot, interaction: discord.Interaction):
    guild = interaction.guild
    channel = interaction.channel

    clan_roles = [
        "‚ö°–ù–µ–æ—Ñ–∏—Çüî•", "üíÄ–ü—Ä–æ–∫–ª—è—Ç—ã–π –ù–æ–≤–æ–±—Ä–∞–Ω–µ—ÜüíÄ", "üî∂–û–≥–Ω–µ–Ω–Ω—ã–π –ë–æ–µ—ÜüíÄ",
        "üîª–¢–µ–Ω–µ–≤–æ–π –°—Ç—Ä–∞–∂üíÄ", "üü£–í–µ—á–Ω—ã–π –û—Ö–æ—Ç–Ω–∏–∫üíÄ", "üü°–ü–ª–∞–º–µ–Ω–Ω—ã–π –ü—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫üíÄ",
        "üí†–¢—ë–º–Ω—ã–π –ö–ª–∏–Ω–æ–∫üíÄ", "üü¢–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –ú–∞—Å—Ç–µ—Ä‚ò†Ô∏è", "‚ö†Ô∏èPyro Mortis‚ö†Ô∏è",
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "‚ö´–ö–∞–ø–µ–ª–∞–ΩüíÄ", "üîß–¢–µ—Ö–Ω–æ–∫—É–∑–Ω–µ—Ü –ú–∞—à–∏–Ω‚öôÔ∏è",
        "‚ö†Ô∏è–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –õ–µ–≥–∏–æ–Ω–∞üíÄ", "üî•–û–≥–Ω–µ–Ω–Ω—ã–π –ú–∞–≥–∏—Å—Ç—Äüé©"
    ]

    if not channel.permissions_for(guild.me).manage_webhooks:
        await interaction.response.send_message("‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±—Ö—É–∫–æ–≤ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        return

    try:
        webhook = await channel.create_webhook(name=bot.user.name)
        logging.info(f'üì° Webhook —Å–æ–∑–¥–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ: {channel.name} –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild.name}')

        members_by_role = {role: [] for role in clan_roles}
        for member in guild.members:
            for role in member.roles:
                if role.name in members_by_role:
                    members_by_role[role.name].append(member)

        member_info = []
        for role in reversed(clan_roles):
            if members_by_role[role]:
                member_info.append(f"**{role}**")
                member_info.extend(f"- [LOTD] {str(m)}" for m in members_by_role[role])
                member_info.append("")

        total_members = sum(len(v) for v in members_by_role.values())
        info_message = (
            f"**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–ª–∞–Ω–∞:** {total_members}\n"
            f"**–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–ª–∞–Ω–∞:**\n" + "\n".join(member_info).strip()
        )

        embed = discord.Embed(
            title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–ª–µ–Ω–∞—Ö –∫–ª–∞–Ω–∞",
            description=info_message,
            color=discord.Color.red()
        )
        embed.set_footer(text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ: {interaction.user}", icon_url=interaction.user.avatar.url if interaction.user.avatar else None)
        embed.timestamp = discord.utils.utcnow()

        avatar_url = bot.user.avatar.url if bot.user.avatar else None
        await webhook.send(embed=embed, avatar_url=avatar_url)
        await webhook.delete()

        await interaction.response.send_message("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫.", ephemeral=True)
        logging.info(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ({total_members} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤).")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–µ–±—Ö—É–∫–∞: {e}")
        await interaction.response.send_message("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.", ephemeral=True)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Cog
async def setup(bot: commands.Bot):
    await bot.add_cog(ClanInfo(bot))
