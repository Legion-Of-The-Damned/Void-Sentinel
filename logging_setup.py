import logging
import sys

class ColorFormatter(logging.Formatter):
    COLORS = {
        'DEBUG': '\033[90m',    # –°–µ—Ä—ã–π
        'INFO': '\033[94m',     # –°–∏–Ω–∏–π
        'WARNING': '\033[93m',  # –ñ—ë–ª—Ç—ã–π
        'ERROR': '\033[91m',    # –ö—Ä–∞—Å–Ω—ã–π
        'CRITICAL': '\033[1;91m', # –ñ–∏—Ä–Ω—ã–π –∫—Ä–∞—Å–Ω—ã–π
        'RESET': '\033[0m',
    }

    def format(self, record):
        color = self.COLORS.get(record.levelname, self.COLORS['RESET'])
        reset = self.COLORS['RESET']
        message = super().format(record)
        return f"{color}{message}{reset}"

class CustomDiscordFormatter(logging.Formatter):
    def format(self, record):
        msg = record.getMessage()

        if "logging in using static token" in msg:
            record.msg = "üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
            record.args = ()
        elif "has connected to Gateway" in msg:
            record.msg = "üåê –®–∞—Ä–¥ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω –∫ Gateway"
            record.args = ()
        return super().format(record)

def setup_logging(log_level=logging.INFO):
    log_format = "%(asctime)s | %(levelname)-8s | %(message)s"
    date_format = "%Y-%m-%d %H:%M:%S"

    # –§–∞–π–ª –¥–ª—è –≤—Å–µ—Ö –ª–æ–≥–æ–≤
    file_handler = logging.FileHandler("bot.log", mode='a', encoding='utf-8')
    file_formatter = logging.Formatter(log_format, datefmt=date_format)
    file_handler.setFormatter(file_formatter)

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π –ª–æ–≥–≥–µ—Ä
    root_logger = logging.getLogger()
    root_logger.setLevel(log_level)
    root_logger.handlers.clear()  # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏

    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ (–±–µ–∑ —Ü–≤–µ—Ç–∞)
    root_logger.addHandler(file_handler)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å —Ü–≤–µ—Ç–æ–º –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞
    console_handler = logging.StreamHandler(sys.stdout)
    try:
        console_handler.stream.reconfigure(encoding='utf-8')
    except AttributeError:
        pass
    console_handler.setFormatter(ColorFormatter(log_format, datefmt=date_format))
    root_logger.addHandler(console_handler)

    # –û—Ç–¥–µ–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä –¥–ª—è discord —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä–æ–º –∏ –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    discord_logger = logging.getLogger("discord")
    discord_logger.setLevel(log_level)
    discord_logger.propagate = False  # —á—Ç–æ–±—ã –Ω–µ —É—Ö–æ–¥–∏–ª–∏ –≤ root_logger

    discord_logger.handlers.clear()
    discord_handler = logging.StreamHandler(sys.stdout)
    try:
        discord_handler.stream.reconfigure(encoding='utf-8')
    except AttributeError:
        pass
    discord_handler.setFormatter(CustomDiscordFormatter(log_format, datefmt=date_format))
    discord_logger.addHandler(discord_handler)
